#!/usr/bin/sh
#
# Pre-commit actions to run:
#
#   Run django unit tests
#   Run django integration tests
#   Fail commit if these aren't clean

echo "[PRE-COMMIT] Running pre-commit checks."
echo "[PRE-COMMIT] Running unit tests"

ROOT_DIR=$(git rev-parse --show-toplevel)
COMMIT_PASS=1

# temporarily hide uncommit changes so they don't interfere with commit state
git stash --keep-index

# run unit tests
cd ${ROOT_DIR}/backend &&
   source venv/bin/activate &&
   python manage.py test

[[ $? == 0 ]] && COMMIT_PASS=0 || COMMIT_PASS=1

# TODO run integration tests
#[[ $? == 0 ]] && COMMIT_PASS=0 || COMMIT_PASS=1

# print result for users
if [ ${COMMIT_PASS} -ne 0 ]
then
   echo "=================================================================================================="
   echo " ██████╗ ██████╗ ███╗   ███╗███╗   ███╗██╗████████╗    ███████╗ █████╗ ██╗██╗     ███████╗██████╗ "
   echo "██╔════╝██╔═══██╗████╗ ████║████╗ ████║██║╚══██╔══╝    ██╔════╝██╔══██╗██║██║     ██╔════╝██╔══██╗"
   echo "██║     ██║   ██║██╔████╔██║██╔████╔██║██║   ██║       █████╗  ███████║██║██║     █████╗  ██║  ██║"
   echo "██║     ██║   ██║██║╚██╔╝██║██║╚██╔╝██║██║   ██║       ██╔══╝  ██╔══██║██║██║     ██╔══╝  ██║  ██║"
   echo "╚██████╗╚██████╔╝██║ ╚═╝ ██║██║ ╚═╝ ██║██║   ██║       ██║     ██║  ██║██║███████╗███████╗██████╔╝"
   echo " ╚═════╝ ╚═════╝ ╚═╝     ╚═╝╚═╝     ╚═╝╚═╝   ╚═╝       ╚═╝     ╚═╝  ╚═╝╚═╝╚══════╝╚══════╝╚═════╝ "
   echo "=================================================================================================="
   echo "THE COMMIT HAS NOT COMPLETED!!! The unit tests for this commit are not clean. Please fix the unit "
   echo "tests and re-run commit."
else
   echo "======================================================================================================="
   echo " ██████╗ ██████╗ ███╗   ███╗███╗   ███╗██╗████████╗    ██████╗  █████╗ ███████╗███████╗███████╗██████╗ "
   echo "██╔════╝██╔═══██╗████╗ ████║████╗ ████║██║╚══██╔══╝    ██╔══██╗██╔══██╗██╔════╝██╔════╝██╔════╝██╔══██╗"
   echo "██║     ██║   ██║██╔████╔██║██╔████╔██║██║   ██║       ██████╔╝███████║███████╗███████╗█████╗  ██║  ██║"
   echo "██║     ██║   ██║██║╚██╔╝██║██║╚██╔╝██║██║   ██║       ██╔═══╝ ██╔══██║╚════██║╚════██║██╔══╝  ██║  ██║"
   echo "╚██████╗╚██████╔╝██║ ╚═╝ ██║██║ ╚═╝ ██║██║   ██║       ██║     ██║  ██║███████║███████║███████╗██████╔╝"
   echo " ╚═════╝ ╚═════╝ ╚═╝     ╚═╝╚═╝     ╚═╝╚═╝   ╚═╝       ╚═╝     ╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝╚═════╝ "
   echo "======================================================================================================="
   echo "Congratulations! The commit has gone through. Ready to push."
fi

# unhide uncommitted changes
git stash pop stash@\{0\}

exit ${COMMIT_PASS}
